
worker_processes auto;
events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile on;

  map $http_authorization $is_authorized {
    default 0;
    "~*^Bearer\s+(.+)$" 1; # We still enforce auth in app, this is optional defense-in-depth
  }

  upstream doh_backend {
    server doh:8080;
    keepalive 32;
  }

  server {
    listen 80;
    server_name _;

    # For HTTP-01
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect everything else to HTTPS on your host (optional)
    return 301 https://__DOMAIN__$request_uri;
  }

  server {
    listen 8443 ssl http2;  # Internal HTTPS only
    server_name _;

    # TLS certs for your DoH host
    ssl_certificate     /etc/letsencrypt/live/__DOMAIN__/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/__DOMAIN__/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # DoH endpoint
    location = /dns-query {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host __DOMAIN__;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://doh_backend;
    }
  }
}
